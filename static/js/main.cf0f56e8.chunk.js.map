{"version":3,"sources":["api/index.ts","hooks/use-auth.tsx","components/Centered/Centered.tsx","components/LoginForm/LoginForm.tsx","containers/Login/Login.tsx","components/SignUpForm/SignUpForm.tsx","containers/SignUp/SignUp.tsx","hooks/useAddWord.ts","hooks/useQueryString.ts","hooks/useGetWordDefinition.ts","containers/AddWord/AddWord.tsx","components/WordsList/WordsList.tsx","components/EntryCard/EntryCard.tsx","containers/Dictionary/Dictionary.tsx","App.tsx","index.tsx"],"names":["instance","axios","create","baseURL","process","interceptors","request","use","config","headers","authorization","localStorage","getItem","error","Promise","reject","AuthContext","createContext","AuthProvider","children","useState","Boolean","token","isAuthenticated","setIsAuntheficated","window","onstorage","key","newValue","useMutation","formValues","post","onSuccess","data","setItem","onError","message","logIn","mutate","isLoggingIn","isLoading","signUp","value","isSigningUp","Provider","useAuth","useContext","Centered","Box","Title","Typography","Text","LoginForm","onLogIn","direction","align","style","width","marginBottom","level","type","onFinish","Item","name","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","htmlType","to","Login","state","useLocation","navigate","useNavigate","from","pathname","search","useEffect","replace","useRedirectToRequestedPage","SignUpForm","onSignUp","hasFeedback","SignUp","useAddWord","DictionaryEntry","useQueryString","queryKey","useSearchParams","searchParams","setSearchParams","get","queryValue","oldParams","Object","fromEntries","updatedParam","newParams","useGetWordDefinition","word","useQuery","then","getWordDefinition","refetchOnWindowFocus","cacheTime","Infinity","enabled","initialData","AddWord","onWordChange","definition","onDefinitionChange","example","onExampleChange","addWord","Form","useForm","form","initialValues","removeEmptyFields","success","resetFields","onChange","currentTarget","disabled","TextArea","loading","columns","title","dataIndex","getNextPageParam","lastPage","pages","wordsInTotal","count","wordsToSkip","length","WordsList","useInfiniteQuery","pageParam","params","skip","limit","fetchNextPage","hasNextPage","status","words","reduce","a","b","concat","dataLength","next","hasMore","loader","active","dataSource","rowKey","_id","pagination","bordered","sticky","EntryCard","synonyms","formattedSynonyms","JSON","stringify","formattedDefinition","toLowerCase","link","sx","mb","Card","variant","CardContent","color","CardActions","Button","component","RouterLink","size","onClick","Result","isError","isSuccess","map","meanings","meaning","idx","partOfSpeech","definitions","Dictionary","onSubmit","event","preventDefault","FormData","noValidate","FormControl","fullWidth","TextField","defaultValue","autoFocus","margin","Layout","p","RequireAuth","location","Main","Navigation","Stack","gap","App","queryClient","QueryClient","mode","setMode","matchMedia","addEventListener","e","matches","theme","useMemo","createTheme","palette","ThemeProvider","client","element","path","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cf0f56e8.chunk.js","sourcesContent":["import axios, { AxiosRequestConfig } from \"axios\";\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n});\n\ninstance.interceptors.request.use(\n  (config: AxiosRequestConfig) =>\n    ({ ...config, headers: { ...config.headers, authorization: localStorage.getItem(\"token\") } }),\n  error => Promise.reject(error)\n);\n\nexport { instance };\n","import { useState, createContext, useContext, FC } from \"react\";\nimport { useMutation, UseMutateFunction } from \"react-query\";\nimport { LoginFormValues } from \"components/LoginForm\";\nimport { AxiosResponse } from \"axios\";\nimport { instance } from \"api\";\nimport { message } from \"antd\";\n\ninterface AuthContextType {\n  isAuthenticated: boolean;\n  isLoggingIn: boolean;\n  isSigningUp: boolean;\n  logIn: UseMutateFunction<AxiosResponse, unknown, LoginFormValues, unknown>;\n  signUp: UseMutateFunction<AxiosResponse, unknown, LoginFormValues, unknown>;\n}\n\nconst AuthContext = createContext<AuthContextType>({} as AuthContextType);\n\nexport const AuthProvider: FC = ({ children }) => {\n  const [isAuthenticated, setIsAuntheficated] = useState<boolean>(() =>\n    Boolean(localStorage.token)\n  );\n\n  window.onstorage = ({ key, newValue }) =>\n    key === \"token\" && setIsAuntheficated(Boolean(newValue));\n\n  const { mutate: logIn, isLoading: isLoggingIn } = useMutation(\n    (formValues: LoginFormValues) => instance.post(\"/user/login\", formValues),\n    {\n      onSuccess({ data: { token } }) {\n        setIsAuntheficated(Boolean(token));\n        localStorage.setItem(\"token\", token);\n      },\n      onError() {\n        message.error(\"Something went wrong\");\n      },\n    }\n  );\n\n  const { mutate: signUp, isLoading: isSigningUp } = useMutation(\n    (formValues: LoginFormValues) => instance.post(\"/user/signup\", formValues),\n    {\n      onSuccess({ data: { token } }) {\n        setIsAuntheficated(Boolean(token));\n        localStorage.setItem(\"token\", token);\n      },\n      onError() {\n        message.error(\"Something went wrong\");\n      },\n    }\n  );\n\n  const value = { isAuthenticated, isLoggingIn, logIn, isSigningUp, signUp };\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => useContext(AuthContext);\n","import { FC } from \"react\";\nimport { Modal } from \"antd\";\nimport { Box } from \"@mui/material\"\n\nexport const Centered: FC = ({ children }) => (\n  <Box>\n    {children}\n  </Box>\n);\n","import { VFC } from \"react\";\nimport { Form, Input, Button, Typography, Space } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\n\nconst { Title, Text } = Typography;\n\nexport type LoginFormValues = {\n  email: string;\n  password: string;\n}\n\ntype LoginFormType = {\n  onLogIn: (values: LoginFormValues) => void;\n}\n\nexport const LoginForm: VFC<LoginFormType> = ({ onLogIn }) => (\n  <>\n    <Space direction=\"vertical\" align=\"center\" style={{ width: \"100%\", marginBottom: \"16px\" }}>\n      <Title level={3}>Log In</Title>\n      <Text type=\"secondary\">to continue to Washoe</Text>\n    </Space>\n    <Form onFinish={onLogIn}>\n      <Form.Item\n        name=\"email\"\n        rules={[\n          {\n            type: \"email\",\n            message: \"The input is not valid E-mail!\"\n          },\n          {\n            required: true,\n            message: \"Please input your E-mail!\"\n          }\n        ]}\n      >\n        <Input prefix={<UserOutlined />} placeholder=\"Email\" />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[ { required: true, message: \"Please input your Password!\" } ]}\n      >\n        <Input.Password prefix={<LockOutlined />} placeholder=\"Password\" />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>\n              Log In\n        </Button>\n      </Form.Item>\n    </Form>\n    <Space direction=\"vertical\" align=\"center\" style={{ width: \"100%\" }}>\n      <Text>New to Washoe? <Link to=\"/signup\">Create an account</Link></Text>\n    </Space>\n  </>\n);\n","import { useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { LoginForm } from \"components/LoginForm\";\nimport { useAuth } from \"hooks/use-auth\";\n\nfunction useRedirectToRequestedPage(isAuthenticated: boolean) {\n  const { state } = useLocation();\n  const navigate = useNavigate();\n  const from = state?.from?.pathname + state?.from?.search || \"/\";\n\n  useEffect(() => {\n    if (isAuthenticated) navigate(from, { replace: true });\n  }, [isAuthenticated, from, navigate]);\n}\n\nexport const Login = () => {\n  const { logIn, isAuthenticated } = useAuth();\n  useRedirectToRequestedPage(isAuthenticated);\n\n  return <LoginForm onLogIn={logIn} />;\n};\n","import { VFC } from \"react\";\nimport { Typography, Space, Form, Input, Button } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\n\nconst { Title, Text } = Typography;\n\nexport type SignUpFormValues = {\n  email: string;\n  password: string;\n}\n\ntype SignUpFormType = {\n  onSignUp: (values: SignUpFormValues) => void;\n}\n\nexport const SignUpForm: VFC<SignUpFormType> = ({ onSignUp }) => (\n  <>\n    <Space direction=\"vertical\" align=\"center\" style={{ width: \"100%\", marginBottom: \"16px\" }}>\n      <Title level={3}>Sign Up</Title>\n      <Text type=\"secondary\">to continue to Washoe</Text>\n    </Space>\n    <Form onFinish={onSignUp}>\n      <Form.Item\n        name=\"email\"\n        rules={[\n          {\n            type: \"email\",\n            message: \"The input is not valid E-mail!\"\n          },\n          {\n            required: true,\n            message: \"Please input your E-mail!\"\n          }\n        ]}\n      >\n        <Input prefix={<UserOutlined />} placeholder=\"Email\" />\n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your password!\"\n          }\n        ]}\n        hasFeedback\n      >\n        <Input.Password\n          prefix={<LockOutlined />}\n          placeholder=\"Password\"\n        />\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>\n          Sign Up\n        </Button>\n      </Form.Item>\n    </Form>\n    <Space direction=\"vertical\" align=\"center\" style={{ width: \"100%\" }}>\n      <Text>Already have an account? <Link to=\"/login\">Log In</Link></Text>\n    </Space>\n  </>\n);\n","import { SignUpForm } from \"components/SignUpForm\";\nimport { useAuth } from \"hooks/use-auth\";\n\nexport const SignUp = () => {\n  const { signUp } = useAuth();\n\n  return <SignUpForm onSignUp={signUp} />;\n};\n","import { useMutation } from \"react-query\";\nimport { DictionaryEntry } from \"washoe-goods\";\nimport { instance } from \"api\";\n\nexport const useAddWord = () =>\n  useMutation((DictionaryEntry: DictionaryEntry) =>\n    instance.post(\"/word/create\", DictionaryEntry)\n  );\n","import { useSearchParams } from \"react-router-dom\";\n\nexport function useQueryString(\n  queryKey: string\n): [string, (string: string) => void] {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleChange = (queryValue: string) => {\n    const oldParams = Object.fromEntries(searchParams);\n    const updatedParam = { [queryKey]: queryValue };\n    const newParams = { ...oldParams, ...updatedParam };\n    setSearchParams(newParams, { replace: true });\n  };\n\n  return [searchParams.get(queryKey) || \"\", handleChange];\n}\n","import axios from \"axios\";\nimport { useQuery } from \"react-query\";\n\nconst engDictionaryPath = \"https://api.dictionaryapi.dev/api/v2/entries/en/\";\n\nconst getWordDefinition = (word: string) =>\n  axios.get(engDictionaryPath + word)\n    .then(({ data }) => data);\n\nexport const useGetWordDefinition = (word: string) =>\n  useQuery([ \"get-definition\", word ], () => getWordDefinition(word), {\n    refetchOnWindowFocus: false,\n    cacheTime: Infinity,\n    enabled: Boolean(word),\n    initialData: []\n  });\n","import { useQueryString, useAddWord } from \"hooks\";\nimport { Form, Typography, message, Input, Button } from \"antd\";\nimport { Centered } from \"components/Centered\";\nimport { DictionaryEntry } from \"washoe-goods\";\nimport {Navigation} from \"../../App\"\n\nconst { Title } = Typography;\n\nconst removeEmptyFields = ({ word, definition, example }: DictionaryEntry) => ({\n  word,\n  ...(definition ? { definition } : {}),\n  ...(example ? { example } : {}),\n});\n\nexport const AddWord = () => {\n  const [word, onWordChange] = useQueryString(\"word\");\n  const [definition, onDefinitionChange] = useQueryString(\"definition\");\n  const [example, onExampleChange] = useQueryString(\"example\");\n\n  const { mutate: addWord, isLoading } = useAddWord();\n  const [form] = Form.useForm();\n\n  const handleAddWord = (formValues: DictionaryEntry) => {\n    addWord(removeEmptyFields(formValues), {\n      onSuccess() {\n        message.success(\"Success!\");\n        form.resetFields();\n      },\n      onError() {\n        message.error(\"Something went wrong\");\n      },\n    });\n  };\n\n  return (\n  <>\n  <Navigation />\n    <Centered>\n      <Title level={3}>Add a Word</Title>\n      <Form\n        form={form}\n        initialValues={{ word, definition, example }}\n        onFinish={handleAddWord}\n      >\n        <Form.Item name=\"word\" required>\n          <Input\n            onChange={({ currentTarget }) => onWordChange(currentTarget.value)}\n            disabled={isLoading}\n            placeholder=\"Word\"\n          />\n        </Form.Item>\n        <Form.Item name=\"definition\" required>\n          <Input.TextArea\n            onChange={({ currentTarget }) =>\n              onDefinitionChange(currentTarget.value)\n            }\n            disabled={isLoading}\n            placeholder=\"Definition\"\n          />\n        </Form.Item>\n        <Form.Item name=\"example\" required>\n          <Input.TextArea\n            onChange={({ currentTarget }) =>\n              onExampleChange(currentTarget.value)\n            }\n            disabled={isLoading}\n            placeholder=\"Example\"\n          />\n        </Form.Item>\n        <Button\n          loading={isLoading}\n          type=\"primary\"\n          htmlType=\"submit\"\n          style={{ width: \"100%\" }}\n        >\n          Add\n        </Button>\n      </Form>\n    </Centered>\n    </>\n  );\n};\n","import InfiniteScroll from \"react-infinite-scroll-component\";\nimport { Table, Skeleton } from \"antd\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { AxiosResponse } from \"axios\";\nimport { Word } from \"washoe-goods\";\nimport { instance } from \"api\";\nimport {Navigation} from \"../../App\"\n\ntype WordData = {\n  words: Word[];\n  count: number;\n};\n\nconst columns = [\n  {\n    title: <strong>Word</strong>,\n    dataIndex: \"word\",\n    key: \"word\",\n  },\n  {\n    title: <strong>Definition</strong>,\n    dataIndex: \"definition\",\n    key: \"definition\",\n  },\n  {\n    title: <strong>Example</strong>,\n    dataIndex: \"example\",\n    key: \"example\",\n  },\n];\n\nconst LIMIT = 25;\n\nfunction getNextPageParam(\n  lastPage: AxiosResponse<WordData>,\n  pages: Array<AxiosResponse<WordData>>\n) {\n  const { count: wordsInTotal } = lastPage.data;\n  const wordsToSkip = pages.length * LIMIT;\n\n  if (wordsInTotal > wordsToSkip) return wordsToSkip;\n  return undefined;\n}\n\nexport const WordsList = () => {\n  const { data, fetchNextPage, hasNextPage, status } = useInfiniteQuery(\n    \"words\",\n    ({ pageParam = 0 }) =>\n      instance.get(\"/word\", { params: { skip: pageParam, limit: LIMIT } }),\n    { getNextPageParam }\n  );\n\n  const words: Word[] =\n    data?.pages.reduce<Array<Word>>((a, b) => a.concat(b.data.words), []) || [];\n\n  return (\n  <>\n  <Navigation />\n    <InfiniteScroll\n      dataLength={words.length}\n      next={fetchNextPage}\n      hasMore={Boolean(hasNextPage)}\n      loader={<Skeleton active />}\n    >\n      <Table\n        columns={columns}\n        dataSource={words}\n        rowKey={({ _id }) => _id}\n        pagination={false}\n        bordered\n        loading={status === \"loading\"}\n        sticky // Doesn't work because of InfiniteScroll\n      />\n    </InfiniteScroll>\n    </>\n  );\n};\n","import { VFC } from \"react\";\nimport { useAddWord } from \"hooks\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Save as DeleteIcon } from \"@mui/icons-material\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n} from \"@mui/material\";\n\ntype EntryCardType = {\n  word: string;\n  definition: string;\n  synonyms: string[];\n  example: undefined | string;\n};\n\nexport const EntryCard: VFC<EntryCardType> = ({\n  word,\n  definition,\n  example,\n  synonyms,\n}) => {\n  const formattedSynonyms = Boolean(synonyms.length)\n    ? \" : \" + JSON.stringify(synonyms)\n    : \"\";\n  const formattedDefinition = `: ${definition.toLowerCase()}${formattedSynonyms}`;\n  const link = `/add-word?word=${word}&definition=${\n    formattedDefinition || \"\"\n  }&example=${example || \"\"}`;\n\n  const { mutate: addWord, isLoading } = useAddWord();\n\n  async function handleQuickAdd(): Promise<any> {\n    addWord({ word, definition: formattedDefinition, example });\n  }\n\n  return (\n    <Box sx={{ mb: 1 }}>\n      <Card variant=\"outlined\">\n        <CardContent>\n          <Typography variant=\"body1\">{formattedDefinition}</Typography>\n          {example && (\n            <Typography sx={{ mb: 1.5 }} variant=\"body2\" color=\"text.secondary\">\n              <ul>\n                <li>\n                  <i>{example}</i>\n                </li>\n              </ul>\n            </Typography>\n          )}\n        </CardContent>\n        <CardActions>\n          <Button component={RouterLink} to={link} size=\"large\">\n            Add\n          </Button>\n          <Button disabled={isLoading} onClick={handleQuickAdd} size=\"large\">\n            {isLoading ? \"Adding...\" : \"Quick Add\"}\n          </Button>\n        </CardActions>\n      </Card>\n    </Box>\n  );\n};\n","import { useQueryString, useGetWordDefinition } from \"hooks\";\nimport { EntryCard } from \"../../components/EntryCard\";\nimport { Stack, Link, TextField, FormControl, Box, Typography } from \"@mui/material\";\nimport {Navigation} from \"../../App\"\n\ntype WikiWordType = {\n  word: string;\n  phonetics: string[];\n  meanings: Array<WikiMeaningType>;\n};\n\ntype WikiMeaningType = {\n  partOfSpeech: string;\n  definitions: Array<WikiDefinitionType>;\n  synonyms: string[];\n  antonyms: string[];\n};\n\ntype WikiDefinitionType = {\n  definition: string;\n  example?: string;\n  synonyms: string[];\n  antonyms: string[];\n};\n\ntype ResultType = {\n  isLoading: boolean;\n  isError: boolean;\n  isSuccess: boolean;\n  data: WikiWordType[];\n};\n\nconst Result = ({ isLoading, isError, isSuccess, data }: ResultType) => {\n  if (isError) return <span>Error occured</span>;\n  if (isLoading) return <span>Loading...</span>;\n  if (!data.length) return <span>\"Empty data</span>;\n  if (!isSuccess) return <span>Enter some word to see it definition</span>;\n\n  return (\n    <>\n      {data.map(({ word, ...instance }: WikiWordType) =>\n        instance.meanings.map((meaning: WikiMeaningType, idx) => (\n          <Box key={idx}>\n            <Typography variant=\"h5\">{meaning.partOfSpeech}</Typography>\n            {meaning.definitions.map((definition: any, idx: number) => (\n              <EntryCard\n                key={idx}\n                word={word}\n                definition={definition.definition}\n                synonyms={definition.synonyms}\n                example={definition.example}\n              />\n            ))}\n          </Box>\n        ))\n      )}\n    </>\n  );\n};\n\nexport const Dictionary = () => {\n  const [word, onWordChange] = useQueryString(\"word\");\n  const { isError, isLoading, isSuccess, data } = useGetWordDefinition(word);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    onWordChange(data.get(\"word\") as string);\n  };\n\n  return (\n    <>\n    <Navigation />\n\n      <Box sx={{ mb: 4 }} component=\"form\" onSubmit={handleSubmit} noValidate>\n        <FormControl fullWidth>\n          <TextField\n            variant=\"standard\"\n            name=\"word\"\n            defaultValue={word}\n            autoFocus\n            margin=\"normal\"\n          />\n        </FormControl>\n      </Box>\n\n      <Result\n        isLoading={isLoading}\n        isError={isError}\n        isSuccess={isSuccess}\n        data={data}\n      />\n    </>\n  );\n};\n","import { Routes, Route, Navigate, Outlet, useLocation, Link } from \"react-router-dom\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { useAuth, AuthProvider } from \"hooks/use-auth\";\nimport { Centered } from \"components/Centered\";\nimport { useState, useMemo } from \"react\";\nimport { Box, Stack } from \"@mui/material\";\n\nimport { Login } from \"containers/Login\";\nimport { SignUp } from \"containers/SignUp\";\nimport { AddWord } from \"containers/AddWord\";\nimport { WordsList } from \"components/WordsList\";\nimport { Dictionary } from \"containers/Dictionary\";\n\nfunction Layout() {\n  const { isAuthenticated } = useAuth();\n  if (!isAuthenticated)\n    return (\n      <Centered>\n        <Outlet />\n      </Centered>\n    );\n  return (\n    <Box sx={{ p: 2 }}>\n      <Outlet />\n    </Box>\n  );\n}\n\nfunction RequireAuth({ children }: { children: JSX.Element }) {\n  const location = useLocation();\n  const { isAuthenticated } = useAuth();\n  return isAuthenticated ? (\n    children\n  ) : (\n    <Navigate to=\"/login\" state={{ from: location }} />\n  );\n}\n\nconst Main = () => <Dictionary />;\n\nexport const Navigation =() => (\n    <Stack direction=\"row\" gap={2} mb={4}>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/add-word\">Add Word</Link>\n      <Link to=\"/my-words\">My Words</Link>\n    </Stack>\n)\n\nexport const App = () => {\n  const queryClient = new QueryClient();\n\n  type PaletteMode = \"light\" | \"dark\";\n\n  const [mode, setMode] = useState<PaletteMode>(\"dark\");\n\n  matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\", (e) =>\n    setMode(e.matches ? \"dark\" : \"light\")\n  );\n\n  const theme = useMemo(() => createTheme({ palette: { mode } }), [mode]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <QueryClientProvider client={queryClient}>\n        <AuthProvider>\n          <Routes>\n            <Route element={<Layout />}>\n              <Route\n                path=\"/\"\n                element={\n                  <RequireAuth>\n                    <Main />\n                  </RequireAuth>\n                }\n              />\n              <Route\n                path=\"/add-word\"\n                element={\n                  <RequireAuth>\n                    <AddWord />\n                  </RequireAuth>\n                }\n              />\n              <Route\n                path=\"/my-words\"\n                element={\n                  <RequireAuth>\n                    <WordsList />\n                  </RequireAuth>\n                }\n              />\n              <Route path=\"/dictionary\" element={<Dictionary />} />\n              <Route path=\"/signup\" element={<SignUp />} />\n              <Route path=\"/login\" element={<Login />} />\n            </Route>\n          </Routes>\n        </AuthProvider>\n      </QueryClientProvider>\n    </ThemeProvider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { App } from \"./App\";\n\nimport \"./index.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}