{"version":3,"sources":["api/index.ts","hooks/use-auth.tsx","components/Navigation/Navigation.tsx","components/Layout/index.tsx","components/LoginForm/LoginForm.tsx","containers/Login/Login.tsx","components/SignUpForm/SignUpForm.tsx","containers/SignUp/SignUp.tsx","hooks/useAddWord.ts","hooks/useQueryString.ts","hooks/useGetWordDefinition.ts","components/Button.tsx","components/Modal.tsx","components/TextArea.tsx","components/WordForm/index.tsx","containers/AddWord/AddWord.tsx","api/queries/updateWord.ts","components/WordsList/WordsList.tsx","api/queries/deleteWord.ts","components/EntryCard/EntryCard.tsx","containers/Dictionary/Dictionary.tsx","Routes.tsx","App.tsx","index.tsx"],"names":["instance","axios","create","baseURL","process","interceptors","request","use","config","headers","authorization","localStorage","getItem","error","Promise","reject","AuthContext","createContext","AuthProvider","children","useState","Boolean","token","isAuthenticated","setIsAuntheficated","window","onstorage","key","newValue","useMutation","formValues","post","onSuccess","data","setItem","onError","message","logIn","mutate","isLoggingIn","isLoading","signUp","value","isSigningUp","Provider","useAuth","useContext","Navigation","AppBar","position","component","Toolbar","color","Link","to","Box","ml","display","gap","CssBaseline","Layout","sx","marginTop","Title","Typography","Text","LoginForm","onLogIn","direction","align","style","width","marginBottom","level","type","onFinish","Item","name","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","htmlType","Login","state","useLocation","navigate","useNavigate","from","pathname","search","useEffect","replace","useRedirectToRequestedPage","SignUpForm","onSignUp","hasFeedback","SignUp","useAddWord","Word","useQueryString","queryKey","useSearchParams","searchParams","setSearchParams","get","queryValue","oldParams","Object","fromEntries","updatedParam","newParams","useGetWordDefinition","word","useQuery","then","getWordDefinition","refetchOnWindowFocus","cacheTime","Infinity","enabled","initialData","colorTable","primary","danger","Button","onClick","variant","size","Modal","onClose","isOpen","title","isMobile","useMediaQuery","theme","breakpoints","down","open","Card","inset","bgcolor","p","top","left","transform","CardHeader","action","IconButton","CardContent","flexDirection","TextArea","props","TextField","multiline","WordForm","onWordChange","definition","onDefinitionChange","example","onExampleChange","onChange","target","AddWord","addWord","entries","removeEmptyFields","queryClient","QueryClient","getNextPageParam","lastPage","pages","wordsInTotal","count","wordsToSkip","length","WordsList","useInfiniteQuery","pageParam","params","skip","limit","fetchNextPage","hasNextPage","refetch","words","reduce","a","b","concat","deleteWord","id","delete","patch","invalidateQueries","refetchInactive","updateWord","_id","dataLength","next","hasMore","loader","active","TableContainer","Paper","padding","Table","TableHead","TableRow","TableBody","map","URLSearchParams","scope","Divider","margin","TableCell","styled","_TableCell","EntryCard","synonyms","formattedSynonyms","JSON","stringify","formattedDefinition","toLowerCase","link","mb","CardActions","RouterLink","disabled","Result","isError","isSuccess","meanings","meaning","idx","partOfSpeech","definitions","Dictionary","onSubmit","event","preventDefault","FormData","currentTarget","FormControl","fullWidth","defaultValue","autoFocus","RequireAuth","location","MyRoutes","element","path","App","prefersDarkMode","createTheme","palette","mode","ThemeProvider","client","initialIsOpen","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ecbf9e86.chunk.js","sourcesContent":["import axios, { AxiosRequestConfig } from \"axios\";\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n});\n\ninstance.interceptors.request.use(\n  (config: AxiosRequestConfig) =>\n    ({ ...config, headers: { ...config.headers, authorization: localStorage.getItem(\"token\") } }),\n  error => Promise.reject(error)\n);\n\nexport { instance };\n","import { useState, createContext, useContext, FC } from \"react\";\nimport { useMutation, UseMutateFunction } from \"react-query\";\nimport { LoginFormValues } from \"components/LoginForm\";\nimport { AxiosResponse } from \"axios\";\nimport { instance } from \"api\";\nimport { message } from \"antd\";\n\ninterface AuthContextType {\n  isAuthenticated: boolean;\n  isLoggingIn: boolean;\n  isSigningUp: boolean;\n  logIn: UseMutateFunction<AxiosResponse, unknown, LoginFormValues, unknown>;\n  signUp: UseMutateFunction<AxiosResponse, unknown, LoginFormValues, unknown>;\n}\n\nconst AuthContext = createContext<AuthContextType>({} as AuthContextType);\n\nexport const AuthProvider: FC = ({ children }) => {\n  const [isAuthenticated, setIsAuntheficated] = useState<boolean>(() =>\n    Boolean(localStorage.token)\n  );\n\n  window.onstorage = ({ key, newValue }) =>\n    key === \"token\" && setIsAuntheficated(Boolean(newValue));\n\n  const { mutate: logIn, isLoading: isLoggingIn } = useMutation(\n    (formValues: LoginFormValues) => instance.post(\"/user/login\", formValues),\n    {\n      onSuccess({ data: { token } }) {\n        setIsAuntheficated(Boolean(token));\n        localStorage.setItem(\"token\", token);\n      },\n      onError() {\n        message.error(\"Something went wrong\");\n      },\n    }\n  );\n\n  const { mutate: signUp, isLoading: isSigningUp } = useMutation(\n    (formValues: LoginFormValues) => instance.post(\"/user/signup\", formValues),\n    {\n      onSuccess({ data: { token } }) {\n        setIsAuntheficated(Boolean(token));\n        localStorage.setItem(\"token\", token);\n      },\n      onError() {\n        message.error(\"Something went wrong\");\n      },\n    }\n  );\n\n  const value = { isAuthenticated, isLoggingIn, logIn, isSigningUp, signUp };\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => useContext(AuthContext);\n","import { AppBar, Toolbar, Button, Box, CssBaseline } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nexport const Navigation = () => (\n  <AppBar position=\"fixed\" component=\"nav\">\n    <Toolbar>\n      <Button color=\"inherit\" component={Link} to=\"/\">\n        Washoe\n      </Button>\n      <Box ml=\"auto\" display=\"flex\" gap={1}>\n        <Button color=\"inherit\" component={Link} to=\"/add-word\">\n          Add Word\n        </Button>\n        <Button color=\"inherit\" component={Link} to=\"/my-words\">\n          My Words\n        </Button>\n      </Box>\n    </Toolbar>\n    <CssBaseline />\n  </AppBar>\n);\n","import { useAuth } from \"hooks/use-auth\";\nimport { Box } from \"@mui/material\";\nimport { Outlet } from \"react-router-dom\";\nimport { Navigation } from \"../Navigation\";\n\nexport const Layout = () => {\n  const { isAuthenticated } = useAuth();\n  if (!isAuthenticated) return <Outlet />;\n  return (\n    <Box sx={{ marginTop: \"64px\" }}>\n      <Navigation />\n      <Outlet />\n    </Box>\n  );\n};\n","import { VFC } from \"react\";\nimport { Form, Input, Button, Typography, Space } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\n\nconst { Title, Text } = Typography;\n\nexport type LoginFormValues = {\n  email: string;\n  password: string;\n}\n\ntype LoginFormType = {\n  onLogIn: (values: LoginFormValues) => void;\n}\n\nexport const LoginForm: VFC<LoginFormType> = ({ onLogIn }) => (\n  <>\n    <Space direction=\"vertical\" align=\"center\" style={{ width: \"100%\", marginBottom: \"16px\" }}>\n      <Title level={3}>Log In</Title>\n      <Text type=\"secondary\">to continue to Washoe</Text>\n    </Space>\n    <Form onFinish={onLogIn}>\n      <Form.Item\n        name=\"email\"\n        rules={[\n          {\n            type: \"email\",\n            message: \"The input is not valid E-mail!\"\n          },\n          {\n            required: true,\n            message: \"Please input your E-mail!\"\n          }\n        ]}\n      >\n        <Input prefix={<UserOutlined />} placeholder=\"Email\" />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[ { required: true, message: \"Please input your Password!\" } ]}\n      >\n        <Input.Password prefix={<LockOutlined />} placeholder=\"Password\" />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>\n              Log In\n        </Button>\n      </Form.Item>\n    </Form>\n    <Space direction=\"vertical\" align=\"center\" style={{ width: \"100%\" }}>\n      <Text>New to Washoe? <Link to=\"/signup\">Create an account</Link></Text>\n    </Space>\n  </>\n);\n","import { useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { LoginForm } from \"components/LoginForm\";\nimport { useAuth } from \"hooks/use-auth\";\n\nfunction useRedirectToRequestedPage(isAuthenticated: boolean) {\n  const { state } = useLocation();\n  const navigate = useNavigate();\n  const from = state?.from?.pathname + state?.from?.search || \"/\";\n\n  useEffect(() => {\n    if (isAuthenticated) navigate(from, { replace: true });\n  }, [isAuthenticated, from, navigate]);\n}\n\nexport const Login = () => {\n  const { logIn, isAuthenticated } = useAuth();\n  useRedirectToRequestedPage(isAuthenticated);\n\n  return <LoginForm onLogIn={logIn} />;\n};\n","import { VFC } from \"react\";\nimport { Typography, Space, Form, Input, Button } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\n\nconst { Title, Text } = Typography;\n\nexport type SignUpFormValues = {\n  email: string;\n  password: string;\n}\n\ntype SignUpFormType = {\n  onSignUp: (values: SignUpFormValues) => void;\n}\n\nexport const SignUpForm: VFC<SignUpFormType> = ({ onSignUp }) => (\n  <>\n    <Space direction=\"vertical\" align=\"center\" style={{ width: \"100%\", marginBottom: \"16px\" }}>\n      <Title level={3}>Sign Up</Title>\n      <Text type=\"secondary\">to continue to Washoe</Text>\n    </Space>\n    <Form onFinish={onSignUp}>\n      <Form.Item\n        name=\"email\"\n        rules={[\n          {\n            type: \"email\",\n            message: \"The input is not valid E-mail!\"\n          },\n          {\n            required: true,\n            message: \"Please input your E-mail!\"\n          }\n        ]}\n      >\n        <Input prefix={<UserOutlined />} placeholder=\"Email\" />\n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your password!\"\n          }\n        ]}\n        hasFeedback\n      >\n        <Input.Password\n          prefix={<LockOutlined />}\n          placeholder=\"Password\"\n        />\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>\n          Sign Up\n        </Button>\n      </Form.Item>\n    </Form>\n    <Space direction=\"vertical\" align=\"center\" style={{ width: \"100%\" }}>\n      <Text>Already have an account? <Link to=\"/login\">Log In</Link></Text>\n    </Space>\n  </>\n);\n","import { SignUpForm } from \"components/SignUpForm\";\nimport { useAuth } from \"hooks/use-auth\";\n\nexport const SignUp = () => {\n  const { signUp } = useAuth();\n\n  return <SignUpForm onSignUp={signUp} />;\n};\n","import { useMutation } from \"react-query\";\nimport { UnsavedWord } from \"types\";\nimport { instance } from \"api\";\n\nexport const useAddWord = () =>\n  useMutation((Word: UnsavedWord) => instance.post(\"/word/create\", Word));\n","import { useSearchParams } from \"react-router-dom\";\n\nexport function useQueryString(\n  queryKey: string\n): [string, (string: string) => void] {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleChange = (queryValue: string) => {\n    const oldParams = Object.fromEntries(searchParams);\n    const updatedParam = { [queryKey]: queryValue };\n    const newParams = { ...oldParams, ...updatedParam };\n    setSearchParams(newParams, { replace: true });\n  };\n\n  return [searchParams.get(queryKey) || \"\", handleChange];\n}\n","import axios from \"axios\";\nimport { useQuery } from \"react-query\";\n\nconst engDictionaryPath = \"https://api.dictionaryapi.dev/api/v2/entries/en/\";\n\nconst getWordDefinition = (word: string) =>\n  axios.get(engDictionaryPath + word)\n    .then(({ data }) => data);\n\nexport const useGetWordDefinition = (word: string) =>\n  useQuery([ \"get-definition\", word ], () => getWordDefinition(word), {\n    refetchOnWindowFocus: false,\n    cacheTime: Infinity,\n    enabled: Boolean(word),\n    initialData: []\n  });\n","import {\n  Button as MuiButton,\n  ButtonProps as MuiButtonProps,\n} from \"@mui/material\";\nimport { PropsWithChildren } from \"react\";\n\ninterface ButtonProps {\n  // size: \"small\" | \"medium\" | \"large\";\n  // variant?: \"contained\";\n  color?: \"primary\" | \"danger\";\n  onClick: () => void;\n}\n\nconst colorTable: Record<string, MuiButtonProps[\"color\"]> = {\n  primary: \"primary\",\n  danger: \"error\",\n};\n\nexport const Button = ({\n  children,\n  onClick,\n  color,\n}: PropsWithChildren<ButtonProps>) => {\n  return (\n    <MuiButton\n      variant=\"contained\"\n      color={colorTable[color || \"primary\"]}\n      size=\"large\"\n      onClick={onClick}\n    >\n      {children}\n    </MuiButton>\n  );\n};\n","import { PropsWithChildren } from \"react\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport {\n  CardContent,\n  CardHeader,\n  IconButton,\n  Modal as MuiModal,\n} from \"@mui/material\";\nimport Card from \"@mui/material/Card\";\n\ninterface ModalProps {\n  onClose?: () => void;\n  isOpen: boolean;\n  title: string;\n}\n\nexport function Modal({\n  children,\n  onClose,\n  isOpen,\n  title,\n}: PropsWithChildren<ModalProps>) {\n  const isMobile = useMediaQuery((theme: Theme) =>\n    theme.breakpoints.down(\"sm\")\n  );\n\n  const desktopStyles = {\n    position: \"absolute\" as \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 400,\n    bgcolor: \"background.paper\",\n    p: 4,\n  };\n\n  const mobileStyles = {\n    position: \"absolute\" as \"absolute\",\n    inset: \"0 0 0 0\",\n    bgcolor: \"background.paper\",\n    p: 1,\n  };\n\n  return (\n    <MuiModal open={isOpen}>\n      <Card sx={isMobile ? mobileStyles : desktopStyles}>\n        <CardHeader\n          action={\n            onClose && (\n              <IconButton onClick={onClose}>\n                <CloseIcon />\n              </IconButton>\n            )\n          }\n          title={title}\n        />\n        <CardContent\n          sx={{ display: \"flex\", flexDirection: \"column\", gap: \"24px\" }}\n        >\n          {children}\n        </CardContent>\n      </Card>\n    </MuiModal>\n  );\n}\n","import TextField, { TextFieldProps } from \"@mui/material/TextField\";\n\nexport function TextArea(props: TextFieldProps) {\n  return <TextField {...props} multiline variant=\"outlined\" />;\n}\n","import { useQueryString } from \"hooks\";\nimport { TextArea } from \"../TextArea\";\n\nexport const WordForm = () => {\n  const [word, onWordChange] = useQueryString(\"word\");\n  const [definition, onDefinitionChange] = useQueryString(\"definition\");\n  const [example, onExampleChange] = useQueryString(\"example\");\n\n  return (\n    <>\n      <TextArea\n        value={word}\n        onChange={({ target }) => onWordChange(target.value)}\n      />\n      <TextArea\n        value={definition}\n        onChange={({ target }) => onDefinitionChange(target.value)}\n      />\n      <TextArea\n        value={example}\n        onChange={({ target }) => onExampleChange(target.value)}\n      />\n    </>\n  );\n};\n","import { useAddWord } from \"hooks\";\nimport { Button } from \"../../components/Button\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Modal } from \"../../components/Modal\";\nimport { WordForm } from \"components/WordForm\";\nimport { UnsavedWord } from \"types\";\n\nconst removeEmptyFields = ({ word, definition, example }: UnsavedWord) => ({\n  word,\n  ...(definition ? { definition } : {}),\n  ...(example ? { example } : {}),\n});\n\nexport const AddWord = () => {\n  const { mutate: addWord } = useAddWord();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleAddWord = () => {\n    const { word, definition, example } = Object.fromEntries(\n      searchParams.entries()\n    );\n    addWord(removeEmptyFields({ word, definition, example }), {\n      onSuccess: () => setSearchParams({}),\n    });\n  };\n\n  return (\n    <Modal title=\"Add word\" isOpen>\n      <WordForm />\n      <Button onClick={handleAddWord}>Add</Button>\n    </Modal>\n  );\n};\n","import { instance } from \"../\";\nimport { useMutation, QueryClient } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\ninterface Data {\n  _id: string;\n  word?: string;\n  definition?: string;\n  example?: string;\n}\n\nexport const useUpdateWord = () =>\n  useMutation((data: Data) => instance.patch(\"/word/update\", data), {\n    onSuccess: () =>\n      queryClient.invalidateQueries(\"words\", { refetchInactive: true }),\n  });\n","import { useSearchParams } from \"react-router-dom\";\nimport { useInfiniteQuery } from \"react-query\";\nimport { useUpdateWord } from \"../../api/queries/updateWord\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { Skeleton } from \"antd\";\nimport { AxiosResponse } from \"axios\";\nimport { useDeleteWord } from \"../../api/queries/deleteWord\";\nimport { Word } from \"../../types\";\nimport { instance } from \"api\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport _TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { Divider, styled } from \"@mui/material\";\nimport { Button } from \"../Button\";\nimport { Modal } from \"../../components/Modal\";\nimport { WordForm } from \"components/WordForm\";\n\ntype WordData = {\n  words: Word[];\n  count: number;\n};\n\nconst LIMIT = 25;\n\nfunction getNextPageParam(\n  lastPage: AxiosResponse<WordData>,\n  pages: Array<AxiosResponse<WordData>>\n) {\n  const { count: wordsInTotal } = lastPage.data;\n  const wordsToSkip = pages.length * LIMIT;\n\n  if (wordsInTotal > wordsToSkip) return wordsToSkip;\n  return undefined;\n}\n\nexport const WordsList = () => {\n  const { data, fetchNextPage, hasNextPage, refetch } = useInfiniteQuery(\n    \"words\",\n    ({ pageParam = 0 }) =>\n      instance.get(\"/word\", { params: { skip: pageParam, limit: LIMIT } }),\n    { getNextPageParam }\n  );\n\n  const words: Word[] =\n    data?.pages.reduce<Array<Word>>((a, b) => a.concat(b.data.words), []) || [];\n\n  const { mutate: deleteWord } = useDeleteWord();\n  const { mutate: updateWord } = useUpdateWord();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const { _id, word, definition, example } = Object.fromEntries(\n    searchParams.entries()\n  );\n\n  const handleDeleteWord = () => {\n    deleteWord(_id, { onSuccess: () => void refetch() });\n    setSearchParams({});\n  };\n\n  const handleUpdateWord = () => {\n    updateWord(\n      { _id, word, definition, example },\n      { onSuccess: () => void refetch() }\n    );\n    setSearchParams({});\n  };\n\n  return (\n    <>\n      <Modal\n        title=\"Edit word\"\n        isOpen={Boolean(_id)}\n        onClose={() => setSearchParams({})}\n      >\n        <WordForm />\n        <Button color=\"danger\" onClick={handleDeleteWord}>\n          Delete\n        </Button>\n        <Button onClick={handleUpdateWord}>Save</Button>\n      </Modal>\n      <InfiniteScroll\n        dataLength={words.length}\n        next={fetchNextPage}\n        hasMore={Boolean(hasNextPage)}\n        loader={<Skeleton active />}\n      >\n        <TableContainer component={Paper} sx={{ padding: 0 }}>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Word</TableCell>\n                <TableCell>Definition/Example</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {words.map(({ _id, word, definition = \"\", example = \"\" }) => (\n                <TableRow\n                  key={_id}\n                  onClick={() =>\n                    setSearchParams(\n                      new URLSearchParams({\n                        _id,\n                        word,\n                        definition,\n                        example,\n                      })\n                    )\n                  }\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {word}\n                  </TableCell>\n                  <TableCell>\n                    {definition}\n                    {Boolean(definition && example) && (\n                      <Divider sx={{ margin: \"4px\" }} />\n                    )}\n                    <i>{example}</i>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </InfiniteScroll>\n    </>\n  );\n};\n\nconst TableCell = styled(_TableCell)`\n  font-size: 12px;\n  padding: 4px 8px;\n`;\n","import { instance } from \"../\";\nimport { useMutation } from \"react-query\";\n\nexport const useDeleteWord = () =>\n  useMutation((id: string) => instance.delete(`/word/delete?id=${id}`));\n\n// export const useWords = (options) =>\n//   useInfiniteQuery(\n//     \"words\",\n//     ({ pageParam = 0 }) =>\n//       instance.get(\"/word\", { params: { skip: pageParam, limit: 25 } }),\n//     options\n//   );\n","import { VFC } from \"react\";\nimport { useAddWord } from \"hooks\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n} from \"@mui/material\";\n\ntype EntryCardType = {\n  word: string;\n  definition: string;\n  synonyms: string[];\n  example: undefined | string;\n};\n\nexport const EntryCard: VFC<EntryCardType> = ({\n  word,\n  definition,\n  example,\n  synonyms,\n}) => {\n  const formattedSynonyms = Boolean(synonyms.length)\n    ? \" : \" + JSON.stringify(synonyms)\n    : \"\";\n  const formattedDefinition = `: ${definition.toLowerCase()}${formattedSynonyms}`;\n  const link = `/add-word?word=${word}&definition=${\n    formattedDefinition || \"\"\n  }&example=${example || \"\"}`;\n\n  const { mutate: addWord, isLoading } = useAddWord();\n\n  async function handleQuickAdd(): Promise<any> {\n    addWord({ word, definition: formattedDefinition, example });\n  }\n\n  return (\n    <Box sx={{ mb: 1 }}>\n      <Card variant=\"outlined\">\n        <CardContent>\n          <Typography variant=\"body1\">{formattedDefinition}</Typography>\n          {example && (\n            <Typography sx={{ mb: 1.5 }} variant=\"body2\" color=\"text.secondary\">\n              <ul>\n                <li>\n                  <i>{example}</i>\n                </li>\n              </ul>\n            </Typography>\n          )}\n        </CardContent>\n        <CardActions>\n          <Button component={RouterLink} to={link} size=\"large\">\n            Add\n          </Button>\n          <Button disabled={isLoading} onClick={handleQuickAdd} size=\"large\">\n            {isLoading ? \"Adding...\" : \"Quick Add\"}\n          </Button>\n        </CardActions>\n      </Card>\n    </Box>\n  );\n};\n","import { useQueryString, useGetWordDefinition } from \"hooks\";\nimport { EntryCard } from \"../../components/EntryCard\";\nimport { TextField, FormControl, Box, Typography } from \"@mui/material\";\n\ntype WikiWordType = {\n  word: string;\n  phonetics: string[];\n  meanings: Array<WikiMeaningType>;\n};\n\ntype WikiMeaningType = {\n  partOfSpeech: string;\n  definitions: Array<WikiDefinitionType>;\n  synonyms: string[];\n  antonyms: string[];\n};\n\ntype WikiDefinitionType = {\n  definition: string;\n  example?: string;\n  synonyms: string[];\n  antonyms: string[];\n};\n\ntype ResultType = {\n  isLoading: boolean;\n  isError: boolean;\n  isSuccess: boolean;\n  data: WikiWordType[];\n};\n\nconst Result = ({ isLoading, isError, isSuccess, data }: ResultType) => {\n  if (isError) return <span>Error occured</span>;\n  if (isLoading) return <span>Loading...</span>;\n  if (!data.length) return <span>\"Empty data</span>;\n  if (!isSuccess) return <span>Enter some word to see it definition</span>;\n\n  return (\n    <>\n      {data.map(({ word, ...instance }: WikiWordType) =>\n        instance.meanings.map((meaning: WikiMeaningType, idx) => (\n          <Box key={idx}>\n            <Typography variant=\"h5\">{meaning.partOfSpeech}</Typography>\n            {meaning.definitions.map((definition: any, idx: number) => (\n              <EntryCard\n                key={idx}\n                word={word}\n                definition={definition.definition}\n                synonyms={definition.synonyms}\n                example={definition.example}\n              />\n            ))}\n          </Box>\n        ))\n      )}\n    </>\n  );\n};\n\nexport const Dictionary = () => {\n  const [word, onWordChange] = useQueryString(\"word\");\n  const { isError, isLoading, isSuccess, data } = useGetWordDefinition(word);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    onWordChange(data.get(\"word\") as string);\n  };\n\n  return (\n    <Box>\n      <form onSubmit={handleSubmit}>\n        <FormControl fullWidth>\n          <TextField\n            variant=\"standard\"\n            name=\"word\"\n            defaultValue={word}\n            autoFocus\n            margin=\"normal\"\n          />\n        </FormControl>\n      </form>\n\n      <Result\n        isLoading={isLoading}\n        isError={isError}\n        isSuccess={isSuccess}\n        data={data}\n      />\n    </Box>\n  );\n};\n","import { Routes, Route, Navigate, useLocation } from \"react-router-dom\";\nimport { useAuth } from \"hooks/use-auth\";\n\nimport { Layout } from \"components/Layout\";\n\nimport { Login } from \"containers/Login\";\nimport { SignUp } from \"containers/SignUp\";\nimport { AddWord } from \"containers/AddWord\";\nimport { WordsList } from \"components/WordsList\";\nimport { Dictionary } from \"containers/Dictionary\";\n\nfunction RequireAuth({ children }: { children: JSX.Element }) {\n  const location = useLocation();\n  const { isAuthenticated } = useAuth();\n  return isAuthenticated ? (\n    children\n  ) : (\n    <Navigate to=\"/login\" state={{ from: location }} />\n  );\n}\n\nexport const MyRoutes = () => (\n  <Routes>\n    <Route element={<Layout />}>\n      <Route\n        path=\"/\"\n        element={\n          <RequireAuth>\n            <Dictionary />\n          </RequireAuth>\n        }\n      />\n      <Route\n        path=\"/add-word\"\n        element={\n          <RequireAuth>\n            <AddWord />\n          </RequireAuth>\n        }\n      />\n      <Route\n        path=\"/my-words\"\n        element={\n          <RequireAuth>\n            <WordsList />\n          </RequireAuth>\n        }\n      />\n      <Route path=\"/dictionary\" element={<Dictionary />} />\n      <Route path=\"/signup\" element={<SignUp />} />\n      <Route path=\"/login\" element={<Login />} />\n    </Route>\n  </Routes>\n);\n","import { BrowserRouter } from \"react-router-dom\";\nimport { StrictMode } from \"react\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { AuthProvider } from \"hooks/use-auth\";\nimport { CssBaseline, useMediaQuery } from \"@mui/material\";\nimport { MyRoutes } from \"./Routes\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nexport const App = () => {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const theme = createTheme({\n    palette: {\n      mode: prefersDarkMode ? \"dark\" : \"light\",\n    },\n  });\n\n  const queryClient = new QueryClient();\n\n  return (\n    <StrictMode>\n      <ThemeProvider theme={theme}>\n        <QueryClientProvider client={queryClient}>\n          <AuthProvider>\n            <BrowserRouter>\n              <MyRoutes />\n            </BrowserRouter>\n          </AuthProvider>\n          <ReactQueryDevtools initialIsOpen={false} />\n        </QueryClientProvider>\n        <CssBaseline />\n      </ThemeProvider>\n    </StrictMode>\n  );\n};\n","import ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}