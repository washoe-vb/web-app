{"version":3,"sources":["api/index.ts","hooks/use-auth.tsx","components/Navigation/Navigation.tsx","components/Layout/index.tsx","components/LoginForm/LoginForm.tsx","containers/Login/Login.tsx","components/SignUpForm/SignUpForm.tsx","containers/SignUp/SignUp.tsx","hooks/useAddWord.ts","hooks/useQueryString.ts","hooks/useGetWordDefinition.ts","components/Centered/Centered.tsx","containers/AddWord/AddWord.tsx","components/TextArea.tsx","components/Modal.tsx","components/WordsList/WordsList.tsx","api/queries/deleteWord.ts","api/queries/updateWord.ts","components/EntryCard/EntryCard.tsx","containers/Dictionary/Dictionary.tsx","Routes.tsx","App.tsx","index.tsx"],"names":["instance","axios","create","baseURL","process","interceptors","request","use","config","headers","authorization","localStorage","getItem","error","Promise","reject","AuthContext","createContext","AuthProvider","children","useState","Boolean","token","isAuthenticated","setIsAuntheficated","window","onstorage","key","newValue","useMutation","formValues","post","onSuccess","data","setItem","onError","message","logIn","mutate","isLoggingIn","isLoading","signUp","value","isSigningUp","Provider","useAuth","useContext","Navigation","AppBar","position","component","Toolbar","Button","color","Link","to","Box","ml","display","gap","CssBaseline","Layout","sx","marginTop","Title","Typography","Text","LoginForm","onLogIn","direction","align","style","width","marginBottom","level","type","onFinish","Item","name","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","htmlType","Login","state","useLocation","navigate","useNavigate","from","pathname","search","useEffect","replace","useRedirectToRequestedPage","SignUpForm","onSignUp","hasFeedback","SignUp","useAddWord","Word","useQueryString","queryKey","useSearchParams","searchParams","setSearchParams","get","queryValue","oldParams","Object","fromEntries","updatedParam","newParams","useGetWordDefinition","word","useQuery","then","getWordDefinition","refetchOnWindowFocus","cacheTime","Infinity","enabled","initialData","Centered","AddWord","onWordChange","definition","onDefinitionChange","example","onExampleChange","addWord","Form","useForm","form","initialValues","removeEmptyFields","success","resetFields","onChange","currentTarget","disabled","TextArea","loading","props","TextField","multiline","variant","Modal","onClose","isOpen","isMobile","useMediaQuery","theme","breakpoints","down","open","Card","inset","bgcolor","p","top","left","transform","CardHeader","action","IconButton","onClick","title","CardContent","flexDirection","getNextPageParam","lastPage","pages","wordsInTotal","count","wordsToSkip","length","WordsList","useInfiniteQuery","pageParam","params","skip","limit","fetchNextPage","hasNextPage","words","reduce","a","b","concat","wordId","setWordId","EditWord","deleteWord","id","delete","patch","updateWord","find","_id","setWord","setDefinition","setExample","event","target","size","dataLength","next","hasMore","loader","active","TableContainer","Paper","padding","Table","TableHead","TableRow","TableBody","map","scope","Divider","margin","TableCell","styled","_TableCell","EntryCard","synonyms","formattedSynonyms","JSON","stringify","formattedDefinition","toLowerCase","link","mb","CardActions","RouterLink","Result","isError","isSuccess","meanings","meaning","idx","partOfSpeech","definitions","Dictionary","onSubmit","preventDefault","FormData","FormControl","fullWidth","defaultValue","autoFocus","RequireAuth","location","MyRoutes","element","path","App","prefersDarkMode","createTheme","palette","mode","queryClient","QueryClient","ThemeProvider","client","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20c7cb5c.chunk.js","sourcesContent":["import axios, { AxiosRequestConfig } from \"axios\";\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n});\n\ninstance.interceptors.request.use(\n  (config: AxiosRequestConfig) =>\n    ({ ...config, headers: { ...config.headers, authorization: localStorage.getItem(\"token\") } }),\n  error => Promise.reject(error)\n);\n\nexport { instance };\n","import { useState, createContext, useContext, FC } from \"react\";\nimport { useMutation, UseMutateFunction } from \"react-query\";\nimport { LoginFormValues } from \"components/LoginForm\";\nimport { AxiosResponse } from \"axios\";\nimport { instance } from \"api\";\nimport { message } from \"antd\";\n\ninterface AuthContextType {\n  isAuthenticated: boolean;\n  isLoggingIn: boolean;\n  isSigningUp: boolean;\n  logIn: UseMutateFunction<AxiosResponse, unknown, LoginFormValues, unknown>;\n  signUp: UseMutateFunction<AxiosResponse, unknown, LoginFormValues, unknown>;\n}\n\nconst AuthContext = createContext<AuthContextType>({} as AuthContextType);\n\nexport const AuthProvider: FC = ({ children }) => {\n  const [isAuthenticated, setIsAuntheficated] = useState<boolean>(() =>\n    Boolean(localStorage.token)\n  );\n\n  window.onstorage = ({ key, newValue }) =>\n    key === \"token\" && setIsAuntheficated(Boolean(newValue));\n\n  const { mutate: logIn, isLoading: isLoggingIn } = useMutation(\n    (formValues: LoginFormValues) => instance.post(\"/user/login\", formValues),\n    {\n      onSuccess({ data: { token } }) {\n        setIsAuntheficated(Boolean(token));\n        localStorage.setItem(\"token\", token);\n      },\n      onError() {\n        message.error(\"Something went wrong\");\n      },\n    }\n  );\n\n  const { mutate: signUp, isLoading: isSigningUp } = useMutation(\n    (formValues: LoginFormValues) => instance.post(\"/user/signup\", formValues),\n    {\n      onSuccess({ data: { token } }) {\n        setIsAuntheficated(Boolean(token));\n        localStorage.setItem(\"token\", token);\n      },\n      onError() {\n        message.error(\"Something went wrong\");\n      },\n    }\n  );\n\n  const value = { isAuthenticated, isLoggingIn, logIn, isSigningUp, signUp };\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => useContext(AuthContext);\n","import { AppBar, Toolbar, Button, Box, CssBaseline } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nexport const Navigation = () => (\n  <AppBar position=\"fixed\" component=\"nav\">\n    <Toolbar>\n      <Button color=\"inherit\" component={Link} to=\"/\">\n        Washoe\n      </Button>\n      <Box ml=\"auto\" display=\"flex\" gap={1}>\n        <Button color=\"inherit\" component={Link} to=\"/add-word\">\n          Add Word\n        </Button>\n        <Button color=\"inherit\" component={Link} to=\"/my-words\">\n          My Words\n        </Button>\n      </Box>\n    </Toolbar>\n    <CssBaseline />\n  </AppBar>\n);\n","import { useAuth } from \"hooks/use-auth\";\nimport { Box } from \"@mui/material\";\nimport { Outlet } from \"react-router-dom\";\nimport { Navigation } from \"../Navigation\";\n\nexport const Layout = () => {\n  const { isAuthenticated } = useAuth();\n  if (!isAuthenticated) return <Outlet />;\n  return (\n    <Box sx={{ marginTop: \"64px\" }}>\n      <Navigation />\n      <Outlet />\n    </Box>\n  );\n};\n","import { VFC } from \"react\";\nimport { Form, Input, Button, Typography, Space } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\n\nconst { Title, Text } = Typography;\n\nexport type LoginFormValues = {\n  email: string;\n  password: string;\n}\n\ntype LoginFormType = {\n  onLogIn: (values: LoginFormValues) => void;\n}\n\nexport const LoginForm: VFC<LoginFormType> = ({ onLogIn }) => (\n  <>\n    <Space direction=\"vertical\" align=\"center\" style={{ width: \"100%\", marginBottom: \"16px\" }}>\n      <Title level={3}>Log In</Title>\n      <Text type=\"secondary\">to continue to Washoe</Text>\n    </Space>\n    <Form onFinish={onLogIn}>\n      <Form.Item\n        name=\"email\"\n        rules={[\n          {\n            type: \"email\",\n            message: \"The input is not valid E-mail!\"\n          },\n          {\n            required: true,\n            message: \"Please input your E-mail!\"\n          }\n        ]}\n      >\n        <Input prefix={<UserOutlined />} placeholder=\"Email\" />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[ { required: true, message: \"Please input your Password!\" } ]}\n      >\n        <Input.Password prefix={<LockOutlined />} placeholder=\"Password\" />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>\n              Log In\n        </Button>\n      </Form.Item>\n    </Form>\n    <Space direction=\"vertical\" align=\"center\" style={{ width: \"100%\" }}>\n      <Text>New to Washoe? <Link to=\"/signup\">Create an account</Link></Text>\n    </Space>\n  </>\n);\n","import { useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { LoginForm } from \"components/LoginForm\";\nimport { useAuth } from \"hooks/use-auth\";\n\nfunction useRedirectToRequestedPage(isAuthenticated: boolean) {\n  const { state } = useLocation();\n  const navigate = useNavigate();\n  const from = state?.from?.pathname + state?.from?.search || \"/\";\n\n  useEffect(() => {\n    if (isAuthenticated) navigate(from, { replace: true });\n  }, [isAuthenticated, from, navigate]);\n}\n\nexport const Login = () => {\n  const { logIn, isAuthenticated } = useAuth();\n  useRedirectToRequestedPage(isAuthenticated);\n\n  return <LoginForm onLogIn={logIn} />;\n};\n","import { VFC } from \"react\";\nimport { Typography, Space, Form, Input, Button } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\n\nconst { Title, Text } = Typography;\n\nexport type SignUpFormValues = {\n  email: string;\n  password: string;\n}\n\ntype SignUpFormType = {\n  onSignUp: (values: SignUpFormValues) => void;\n}\n\nexport const SignUpForm: VFC<SignUpFormType> = ({ onSignUp }) => (\n  <>\n    <Space direction=\"vertical\" align=\"center\" style={{ width: \"100%\", marginBottom: \"16px\" }}>\n      <Title level={3}>Sign Up</Title>\n      <Text type=\"secondary\">to continue to Washoe</Text>\n    </Space>\n    <Form onFinish={onSignUp}>\n      <Form.Item\n        name=\"email\"\n        rules={[\n          {\n            type: \"email\",\n            message: \"The input is not valid E-mail!\"\n          },\n          {\n            required: true,\n            message: \"Please input your E-mail!\"\n          }\n        ]}\n      >\n        <Input prefix={<UserOutlined />} placeholder=\"Email\" />\n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your password!\"\n          }\n        ]}\n        hasFeedback\n      >\n        <Input.Password\n          prefix={<LockOutlined />}\n          placeholder=\"Password\"\n        />\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>\n          Sign Up\n        </Button>\n      </Form.Item>\n    </Form>\n    <Space direction=\"vertical\" align=\"center\" style={{ width: \"100%\" }}>\n      <Text>Already have an account? <Link to=\"/login\">Log In</Link></Text>\n    </Space>\n  </>\n);\n","import { SignUpForm } from \"components/SignUpForm\";\nimport { useAuth } from \"hooks/use-auth\";\n\nexport const SignUp = () => {\n  const { signUp } = useAuth();\n\n  return <SignUpForm onSignUp={signUp} />;\n};\n","import { useMutation } from \"react-query\";\nimport { UnsavedWord } from \"types\";\nimport { instance } from \"api\";\n\nexport const useAddWord = () =>\n  useMutation((Word: UnsavedWord) => instance.post(\"/word/create\", Word));\n","import { useSearchParams } from \"react-router-dom\";\n\nexport function useQueryString(\n  queryKey: string\n): [string, (string: string) => void] {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleChange = (queryValue: string) => {\n    const oldParams = Object.fromEntries(searchParams);\n    const updatedParam = { [queryKey]: queryValue };\n    const newParams = { ...oldParams, ...updatedParam };\n    setSearchParams(newParams, { replace: true });\n  };\n\n  return [searchParams.get(queryKey) || \"\", handleChange];\n}\n","import axios from \"axios\";\nimport { useQuery } from \"react-query\";\n\nconst engDictionaryPath = \"https://api.dictionaryapi.dev/api/v2/entries/en/\";\n\nconst getWordDefinition = (word: string) =>\n  axios.get(engDictionaryPath + word)\n    .then(({ data }) => data);\n\nexport const useGetWordDefinition = (word: string) =>\n  useQuery([ \"get-definition\", word ], () => getWordDefinition(word), {\n    refetchOnWindowFocus: false,\n    cacheTime: Infinity,\n    enabled: Boolean(word),\n    initialData: []\n  });\n","import { FC } from \"react\";\nimport { Box } from \"@mui/material\";\n\nexport const Centered: FC = ({ children }) => <Box>{children}</Box>;\n","import { useQueryString, useAddWord } from \"hooks\";\nimport { Form, Typography, message, Input, Button } from \"antd\";\nimport { Centered } from \"components/Centered\";\nimport { UnsavedWord } from \"types\";\n\nconst { Title } = Typography;\n\nconst removeEmptyFields = ({ word, definition, example }: UnsavedWord) => ({\n  word,\n  ...(definition ? { definition } : {}),\n  ...(example ? { example } : {}),\n});\n\nexport const AddWord = () => {\n  const [word, onWordChange] = useQueryString(\"word\");\n  const [definition, onDefinitionChange] = useQueryString(\"definition\");\n  const [example, onExampleChange] = useQueryString(\"example\");\n\n  const { mutate: addWord, isLoading } = useAddWord();\n  const [form] = Form.useForm();\n\n  const handleAddWord = (formValues: UnsavedWord) => {\n    addWord(removeEmptyFields(formValues), {\n      onSuccess() {\n        message.success(\"Success!\");\n        form.resetFields();\n      },\n      onError() {\n        message.error(\"Something went wrong\");\n      },\n    });\n  };\n\n  return (\n    <>\n      <Centered>\n        <Title level={3}>Add a Word</Title>\n        <Form\n          form={form}\n          initialValues={{ word, definition, example }}\n          onFinish={handleAddWord}\n        >\n          <Form.Item name=\"word\" required>\n            <Input\n              onChange={({ currentTarget }) =>\n                onWordChange(currentTarget.value)\n              }\n              disabled={isLoading}\n              placeholder=\"Word\"\n            />\n          </Form.Item>\n          <Form.Item name=\"definition\" required>\n            <Input.TextArea\n              onChange={({ currentTarget }) =>\n                onDefinitionChange(currentTarget.value)\n              }\n              disabled={isLoading}\n              placeholder=\"Definition\"\n            />\n          </Form.Item>\n          <Form.Item name=\"example\" required>\n            <Input.TextArea\n              onChange={({ currentTarget }) =>\n                onExampleChange(currentTarget.value)\n              }\n              disabled={isLoading}\n              placeholder=\"Example\"\n            />\n          </Form.Item>\n          <Button\n            loading={isLoading}\n            type=\"primary\"\n            htmlType=\"submit\"\n            style={{ width: \"100%\" }}\n          >\n            Add\n          </Button>\n        </Form>\n      </Centered>\n    </>\n  );\n};\n","import TextField, { TextFieldProps } from \"@mui/material/TextField\";\n\nexport function TextArea(props: TextFieldProps) {\n  return <TextField {...props} multiline variant=\"outlined\" />;\n}\n","import { PropsWithChildren } from \"react\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport {\n  CardContent,\n  CardHeader,\n  IconButton,\n  Modal as MuiModal,\n} from \"@mui/material\";\nimport Card from \"@mui/material/Card\";\n\ninterface ModalProps {\n  onClose: () => void;\n  isOpen: boolean;\n}\n\nexport function Modal({\n  children,\n  onClose,\n  isOpen,\n}: PropsWithChildren<ModalProps>) {\n  const isMobile = useMediaQuery((theme: Theme) =>\n    theme.breakpoints.down(\"sm\")\n  );\n\n  const desktopStyles = {\n    position: \"absolute\" as \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 400,\n    bgcolor: \"background.paper\",\n    p: 4,\n  };\n\n  const mobileStyles = {\n    position: \"absolute\" as \"absolute\",\n    inset: \"0 0 0 0\",\n    bgcolor: \"background.paper\",\n    p: 1,\n  };\n\n  return (\n    <MuiModal open={isOpen}>\n      <Card sx={isMobile ? mobileStyles : desktopStyles}>\n        <CardHeader\n          action={\n            onClose && (\n              <IconButton onClick={onClose}>\n                <CloseIcon />\n              </IconButton>\n            )\n          }\n          title=\"Edit word\"\n        />\n        <CardContent\n          sx={{ display: \"flex\", flexDirection: \"column\", gap: \"24px\" }}\n        >\n          {children}\n        </CardContent>\n      </Card>\n    </MuiModal>\n  );\n}\n","import { useState } from \"react\";\nimport { useInfiniteQuery } from \"react-query\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport { useUpdateWord } from \"../../api/queries/updateWord\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { Skeleton } from \"antd\";\nimport { AxiosResponse } from \"axios\";\nimport { useDeleteWord } from \"../../api/queries/deleteWord\";\nimport { Word } from \"../../types\";\nimport { instance } from \"api\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport _TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { Divider, styled } from \"@mui/material\";\nimport { TextArea } from \"../../components/TextArea\";\nimport Button from \"@mui/material/Button\";\nimport { Modal } from \"../../components/Modal\";\n\ntype WordData = {\n  words: Word[];\n  count: number;\n};\n\nconst LIMIT = 25;\n\nfunction getNextPageParam(\n  lastPage: AxiosResponse<WordData>,\n  pages: Array<AxiosResponse<WordData>>\n) {\n  const { count: wordsInTotal } = lastPage.data;\n  const wordsToSkip = pages.length * LIMIT;\n\n  if (wordsInTotal > wordsToSkip) return wordsToSkip;\n  return undefined;\n}\n\nexport const WordsList = () => {\n  const { data, fetchNextPage, hasNextPage } = useInfiniteQuery(\n    \"words\",\n    ({ pageParam = 0 }) =>\n      instance.get(\"/word\", { params: { skip: pageParam, limit: LIMIT } }),\n    { getNextPageParam }\n  );\n\n  const words: Word[] =\n    data?.pages.reduce<Array<Word>>((a, b) => a.concat(b.data.words), []) || [];\n\n  const [wordId, setWordId] = useState(\"\");\n\n  interface EditWordCardProps {\n    onClose?: () => void;\n  }\n\n  const EditWord = ({ onClose }: EditWordCardProps) => {\n    const { mutate: deleteWord } = useDeleteWord();\n    const { mutate: updateWord } = useUpdateWord();\n    const [word, setWord] = useState(\n      words.find(({ _id }) => _id === wordId)!.word\n    );\n\n    const [definition, setDefinition] = useState(\n      words.find(({ _id }) => _id === wordId)!.definition\n    );\n\n    const [example, setExample] = useState(\n      words.find(({ _id }) => _id === wordId)!.example\n    );\n    // <TextArea />\n    // <TextArea />\n    // <Button variant=\"contained\" color=\"error\" size=\"large\">\n    //   Delete\n    // </Button>\n    // <Button variant=\"contained\" color=\"primary\" size=\"large\">\n    //   Save\n    // </Button>\n\n    return (\n      <>\n        <TextArea\n          value={word}\n          onChange={(event) => setWord(event.target.value)}\n        />\n        <TextArea\n          value={definition}\n          onChange={(event) => setDefinition(event.target.value)}\n        />\n        <TextArea\n          value={example}\n          onChange={(event) => setExample(event.target.value)}\n        />\n\n        <Button\n          size=\"large\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={() => deleteWord(wordId)}\n        >\n          Delete\n        </Button>\n        <Button\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() =>\n            updateWord({\n              _id: wordId,\n              word,\n              definition: definition || \"\",\n              example: example || \"\",\n            })\n          }\n        >\n          Save\n        </Button>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Modal isOpen={Boolean(wordId)} onClose={() => setWordId(\"\")}>\n        <EditWord />\n      </Modal>\n      <InfiniteScroll\n        dataLength={words.length}\n        next={fetchNextPage}\n        hasMore={Boolean(hasNextPage)}\n        loader={<Skeleton active />}\n      >\n        <TableContainer component={Paper} sx={{ padding: 0 }}>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Word</TableCell>\n                <TableCell>Definition/Example</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {words.map((word) => (\n                <TableRow key={word._id} onClick={() => setWordId(word._id)}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {word.word}\n                  </TableCell>\n                  <TableCell>\n                    {word.definition}\n                    {Boolean(word.definition && word.example) && (\n                      <Divider sx={{ margin: \"4px\" }} />\n                    )}\n                    <i>{word.example}</i>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </InfiniteScroll>\n    </>\n  );\n};\n\nconst TableCell = styled(_TableCell)`\n  font-size: 12px;\n  padding: 4px 8px;\n`;\n","import { instance } from \"../\";\nimport { useMutation } from \"react-query\";\n\nexport const useDeleteWord = () =>\n  useMutation((id: string) => instance.delete(`/word/delete?id=${id}`));\n\n// export const useWords = (options) =>\n//   useInfiniteQuery(\n//     \"words\",\n//     ({ pageParam = 0 }) =>\n//       instance.get(\"/word\", { params: { skip: pageParam, limit: 25 } }),\n//     options\n//   );\n","import { instance } from \"../\";\nimport { useMutation } from \"react-query\";\n\ninterface Data {\n  _id: string;\n  word?: string;\n  definition?: string;\n  example?: string;\n}\n\nexport const useUpdateWord = () =>\n  useMutation((data: Data) => instance.patch(\"/word/update\", data));\n","import { VFC } from \"react\";\nimport { useAddWord } from \"hooks\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n} from \"@mui/material\";\n\ntype EntryCardType = {\n  word: string;\n  definition: string;\n  synonyms: string[];\n  example: undefined | string;\n};\n\nexport const EntryCard: VFC<EntryCardType> = ({\n  word,\n  definition,\n  example,\n  synonyms,\n}) => {\n  const formattedSynonyms = Boolean(synonyms.length)\n    ? \" : \" + JSON.stringify(synonyms)\n    : \"\";\n  const formattedDefinition = `: ${definition.toLowerCase()}${formattedSynonyms}`;\n  const link = `/add-word?word=${word}&definition=${\n    formattedDefinition || \"\"\n  }&example=${example || \"\"}`;\n\n  const { mutate: addWord, isLoading } = useAddWord();\n\n  async function handleQuickAdd(): Promise<any> {\n    addWord({ word, definition: formattedDefinition, example });\n  }\n\n  return (\n    <Box sx={{ mb: 1 }}>\n      <Card variant=\"outlined\">\n        <CardContent>\n          <Typography variant=\"body1\">{formattedDefinition}</Typography>\n          {example && (\n            <Typography sx={{ mb: 1.5 }} variant=\"body2\" color=\"text.secondary\">\n              <ul>\n                <li>\n                  <i>{example}</i>\n                </li>\n              </ul>\n            </Typography>\n          )}\n        </CardContent>\n        <CardActions>\n          <Button component={RouterLink} to={link} size=\"large\">\n            Add\n          </Button>\n          <Button disabled={isLoading} onClick={handleQuickAdd} size=\"large\">\n            {isLoading ? \"Adding...\" : \"Quick Add\"}\n          </Button>\n        </CardActions>\n      </Card>\n    </Box>\n  );\n};\n","import { useQueryString, useGetWordDefinition } from \"hooks\";\nimport { EntryCard } from \"../../components/EntryCard\";\nimport { TextField, FormControl, Box, Typography } from \"@mui/material\";\n\ntype WikiWordType = {\n  word: string;\n  phonetics: string[];\n  meanings: Array<WikiMeaningType>;\n};\n\ntype WikiMeaningType = {\n  partOfSpeech: string;\n  definitions: Array<WikiDefinitionType>;\n  synonyms: string[];\n  antonyms: string[];\n};\n\ntype WikiDefinitionType = {\n  definition: string;\n  example?: string;\n  synonyms: string[];\n  antonyms: string[];\n};\n\ntype ResultType = {\n  isLoading: boolean;\n  isError: boolean;\n  isSuccess: boolean;\n  data: WikiWordType[];\n};\n\nconst Result = ({ isLoading, isError, isSuccess, data }: ResultType) => {\n  if (isError) return <span>Error occured</span>;\n  if (isLoading) return <span>Loading...</span>;\n  if (!data.length) return <span>\"Empty data</span>;\n  if (!isSuccess) return <span>Enter some word to see it definition</span>;\n\n  return (\n    <>\n      {data.map(({ word, ...instance }: WikiWordType) =>\n        instance.meanings.map((meaning: WikiMeaningType, idx) => (\n          <Box key={idx}>\n            <Typography variant=\"h5\">{meaning.partOfSpeech}</Typography>\n            {meaning.definitions.map((definition: any, idx: number) => (\n              <EntryCard\n                key={idx}\n                word={word}\n                definition={definition.definition}\n                synonyms={definition.synonyms}\n                example={definition.example}\n              />\n            ))}\n          </Box>\n        ))\n      )}\n    </>\n  );\n};\n\nexport const Dictionary = () => {\n  const [word, onWordChange] = useQueryString(\"word\");\n  const { isError, isLoading, isSuccess, data } = useGetWordDefinition(word);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    onWordChange(data.get(\"word\") as string);\n  };\n\n  return (\n    <Box>\n      <form onSubmit={handleSubmit}>\n        <FormControl fullWidth>\n          <TextField\n            variant=\"standard\"\n            name=\"word\"\n            defaultValue={word}\n            autoFocus\n            margin=\"normal\"\n          />\n        </FormControl>\n      </form>\n\n      <Result\n        isLoading={isLoading}\n        isError={isError}\n        isSuccess={isSuccess}\n        data={data}\n      />\n    </Box>\n  );\n};\n","import { Routes, Route, Navigate, useLocation } from \"react-router-dom\";\nimport { useAuth } from \"hooks/use-auth\";\n\nimport { Layout } from \"components/Layout\";\n\nimport { Login } from \"containers/Login\";\nimport { SignUp } from \"containers/SignUp\";\nimport { AddWord } from \"containers/AddWord\";\nimport { WordsList } from \"components/WordsList\";\nimport { Dictionary } from \"containers/Dictionary\";\n\nfunction RequireAuth({ children }: { children: JSX.Element }) {\n  const location = useLocation();\n  const { isAuthenticated } = useAuth();\n  return isAuthenticated ? (\n    children\n  ) : (\n    <Navigate to=\"/login\" state={{ from: location }} />\n  );\n}\n\nexport const MyRoutes = () => (\n  <Routes>\n    <Route element={<Layout />}>\n      <Route\n        path=\"/\"\n        element={\n          <RequireAuth>\n            <Dictionary />\n          </RequireAuth>\n        }\n      />\n      <Route\n        path=\"/add-word\"\n        element={\n          <RequireAuth>\n            <AddWord />\n          </RequireAuth>\n        }\n      />\n      <Route\n        path=\"/my-words\"\n        element={\n          <RequireAuth>\n            <WordsList />\n          </RequireAuth>\n        }\n      />\n      <Route path=\"/dictionary\" element={<Dictionary />} />\n      <Route path=\"/signup\" element={<SignUp />} />\n      <Route path=\"/login\" element={<Login />} />\n    </Route>\n  </Routes>\n);\n","import { BrowserRouter } from \"react-router-dom\";\nimport { StrictMode } from \"react\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { AuthProvider } from \"hooks/use-auth\";\nimport { CssBaseline, useMediaQuery } from \"@mui/material\";\nimport { MyRoutes } from \"./Routes\";\n\nexport const App = () => {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const theme = createTheme({\n    palette: {\n      mode: prefersDarkMode ? \"dark\" : \"light\",\n    },\n  });\n\n  const queryClient = new QueryClient();\n\n  return (\n    <StrictMode>\n      <ThemeProvider theme={theme}>\n        <QueryClientProvider client={queryClient}>\n          <AuthProvider>\n            <BrowserRouter>\n              <MyRoutes />\n            </BrowserRouter>\n          </AuthProvider>\n        </QueryClientProvider>\n        <CssBaseline />\n      </ThemeProvider>\n    </StrictMode>\n  );\n};\n","import ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}